{"version":3,"sources":["components/Footer/images/TMDBLogo.svg","reducers/PostMDBConfigReducer.js","actions/types.js","reducers/postMoviePopularReducer.js","reducers/postTVPopularReducer.js","reducers/setItemTypeReducer.js","reducers/getMovieGenreReducer.js","reducers/getTVGenreReducer.js","reducers/getMovieDetailsReducer.js","reducers/getMovieCreditsReducer.js","reducers/getMovieReviewsReducer.js","reducers/getMovieVideosReducer.js","reducers/rootReducer.js","store.js","components/SearchBar/SearchBar.js","actions/postMoviePopularAction.js","actions/postTVPopularAction.js","actions/PostMDBConfigAction.js","components/Paginations/Paginations.js","components/Header/Header.js","actions/setItemTypeAction.js","components/ToggleButtons/ToggleButtons.js","components/Footer/Footer.js","components/Loader/Loader.js","components/PopularMovies/PopularMovies.js","components/PopularTVShows/PopularTVShows.js","components/ItemCarousel/ItemCarousel.js","components/Home/Home.js","actions/getMovieDetailsAction.js","actions/getMovieCreditsAction.js","actions/getMovieReviewsAction.js","actions/getMovieVideosAction.js","components/ItemDetails/ItemDetails.js","actions/getMovieGenreAction.js","actions/getTVGenreAction.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","apiKey","PostMDBConfig","state","action","type","payload","results","postMoviePopular","postTVPopular","itemType","setItemType","getMovieGenre","getTVGenre","getMovieDetails","getMovieCredits","getMovieReviews","getMovieVideos","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","SearchBar","props","useState","InputGroup","style","flexDirection","justifyContent","width","alignItems","Input","placeholder","InputGroupAddon","addonType","Button","color","icon","url","dispatch","fetch","then","res","json","data","saveMoviePopular","catch","error","console","log","saveTVPopular","postMDBConfig","Paginations","moviePage","tvPage","handleFetchNewMovie","page","handleFetchNewTV","handleMovieClick","pageTransition","setState","handleTVClick","this","pageBack","PaginationLink","previous","href","onClick","e","preventDefault","pageForward","next","Pagination","marginTop","paddingLeft","aria-label","PaginationItem","React","Component","connect","moviesPopular","tvPopular","Header","isOpen","setIsOpen","position","top","zIndex","Navbar","dark","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","className","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","ToggleButtons","id","display","ButtonGroup","size","active","Footer","data-wow-delay","data-wow-duration","to","target","rel","src","TMDBLogo","alt","xmlns","viewBox","d","Loader","setTimeout","document","querySelector","transition","opacity","remove","Spinner","height","PopularMovies","handleGetGenre","genreIds","movieGenres","genres","genresArr","filter","genre","name","Fragment","items","map","movie","Media","left","textDecoration","toLowerCase","object","MDBConfig","images","secure_base_url","poster_path","title","body","heading","genre_ids","vote_average","overview","PopularTVShows","tvGenres","show","Test","activeIndex","setActiveIndex","animating","setAnimating","nextIndex","length","slides","CarouselItem","onExiting","onExited","backdrop_path","CarouselCaption","captionText","release_date","captionHeader","tv","first_air_date","Carousel","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","Home","renderShowType","config","renderCarouselType","saveMovieDetails","saveMovieCredits","saveMovieReviews","saveMovieVideos","ItemDetails","fetchData","match","params","Card","Image","movieDetails","wrapped","ui","Content","Meta","Description","tagline","extra","movieCredits","movieReviews","movieVideos","saveMovieGenre","saveTVGenre","library","add","fas","faFilm","faSearch","App","path","exact","component","logInStatus","session","failure","from","Boolean","location","hostname","ReactDOM","render","loading","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uGAAAA,EAAOC,QAAU,IAA0B,sC,+7BCE3C,IAAMC,EAAe,CACnBC,OAAQ,oCAeKC,EAZO,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCACtD,OAAQA,EAAOC,MACb,ICR2B,kBDSzB,OAAO,EAAP,GACKF,EADL,GAEKC,EAAOE,SAEd,QACE,OAAOH,I,yjBEZb,IAAMH,EAAe,CACjBO,QAAS,IAgBEC,EAbU,WAAmC,IAAlCL,EAAiC,uDAAzBH,EAAcI,EAAW,uCACvD,OAAQA,EAAOC,MACX,IDP0B,qBCQtB,OAAO,KACAF,EADP,GAEOC,EAAOE,SAElB,QACI,OAAOH,I,yjBCZnB,IAAMH,EAAe,CACjBO,QAAS,IAeEE,EAZO,WAAmC,IAAlCN,EAAiC,uDAAzBH,EAAcI,EAAW,uCACpD,OAAQA,EAAOC,MACX,IFNuB,kBEOnB,OAAO,KACAF,EADP,GAEOC,EAAOE,SAElB,QACI,OAAOH,ICZbH,EAAe,CACnBU,SAAU,MAkBGC,EAfK,WAAmC,IAAlCR,EAAiC,uDAAzBH,EAAcI,EAAW,uCACpD,OAAOA,EAAOC,MACZ,IHJ+B,sBGK7B,MAAO,CACLK,SAAU,SAEd,IHT4B,mBGU1B,MAAO,CACLA,SAAU,MAEd,QACE,OAAOP,I,yjBCfb,IAAMH,EAAe,GAcNY,EAZO,WAAmC,IAAlCT,EAAiC,uDAAzBH,EAAcI,EAAW,uCACpD,OAAOA,EAAOC,MACV,IJDuB,kBIEnB,OAAO,KACAF,EADP,GAEOC,EAAOE,SAElB,QACI,OAAOH,I,yjBCVnB,IAAMH,EAAe,GAcNa,EAZI,WAAmC,IAAlCV,EAAiC,uDAAzBH,EAAcI,EAAW,uCACjD,OAAOA,EAAOC,MACV,ILAoB,eKChB,OAAO,KACAF,EADP,GAEOC,EAAOE,SAElB,QACI,OAAOH,I,yjBCVnB,IAAMH,EAAe,GAcNc,EAZS,WAAmC,IAAlCX,EAAiC,uDAAzBH,EAAcI,EAAW,uCACtD,OAAOA,EAAOC,MACV,INCyB,oBMArB,OAAO,KACAF,EADP,GAEOC,EAAOE,SAElB,QACI,OAAOH,I,yjBCVnB,IAAMH,EAAe,GAcNe,EAZS,WAAmC,IAAlCZ,EAAiC,uDAAzBH,EAAcI,EAAW,uCACtD,OAAOA,EAAOC,MACV,IPGyB,oBOFrB,OAAO,KACAF,EADP,GAEOC,EAAOE,SAElB,QACI,OAAOH,I,yjBCVnB,IAAMH,EAAe,GAcNgB,EAZS,WAAmC,IAAlCb,EAAiC,uDAAzBH,EAAcI,EAAW,uCACtD,OAAOA,EAAOC,MACV,IRKyB,oBQJrB,OAAO,KACAF,EADP,GAEOC,EAAOE,SAElB,QACI,OAAOH,I,yjBCVnB,IAAMH,EAAe,GAcNiB,EAZQ,WAAmC,IAAlCd,EAAiC,uDAAzBH,EAAcI,EAAW,uCACrD,OAAOA,EAAOC,MACV,ITMwB,mBSLpB,OAAO,KACAF,EADP,GAEOC,EAAOE,SAElB,QACI,OAAOH,ICaJe,EAbKC,YAAgB,CAChCjB,gBACAM,mBACAC,gBACAE,cACAC,gBACAC,aACAC,kBACAC,kBACAC,kBACAC,mB,kBChBEG,EAAgB,CAClBC,IAAK,OACLC,Q,OAAAA,GAGEC,EAAmBC,YAAeJ,EAAeF,GAEjDO,GAAa,CAACC,KAEdC,GAAmBC,OAAOC,sCAAwCC,IAE3DC,GAAQC,YAAYT,EAAkBI,GAAiBM,IAAe,WAAf,EAAmBR,MAC1ES,GAAYC,YAAaJ,I,kICavBK,GAjBG,SAACC,GAAW,IAAD,EACaC,oBAAS,GADtB,iCAEmBA,oBAAS,IAF5B,8BAQ3B,OACE,kBAACC,GAAA,EAAD,CAAYC,MAAO,CAAEC,cAAe,MAAOC,eAAgB,SAAUC,MAAO,MAAMC,WAAY,WAC1F,kBAACC,GAAA,EAAD,CAAOC,YAAY,cACnB,kBAACC,GAAA,EAAD,CAAiBC,UAAU,UAAS,kBAACC,GAAA,EAAD,CAAQC,MAAM,UAAU7C,KAAK,UAAS,kBAAC,KAAD,CAAiB8C,KAAK,e,8CCvB3F3C,GAAmB,SAAA4C,GAAG,OAAI,SAAAC,GACnCC,MAAMF,GACLG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EAASM,GAAiBD,OACvCE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAIZF,GAAmB,SAAArD,GACrB,MAAO,CACHD,KbZ0B,qBaa1BC,YCZKG,GAAgB,SAAA2C,GAAG,OAAI,SAAAC,GAChCC,MAAMF,GACLG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EAASW,GAAcN,OACpCE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,QAIdG,GAAgB,SAAA1D,GAClB,MAAO,CACHD,KdXuB,kBcYvBC,YCPK2D,GAAgB,SAAAb,GAC3B,OAAO,SAAAC,GACLC,MAAMF,GACLG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EATgB,CAChChD,KfH6B,kBeI7BC,QAOuCoD,OACpCE,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QCJ1BK,G,8MACE/D,MAAQ,CACJgE,UAAW,EACXC,OAAQ,G,EAShBC,oBAAsB,SAACpE,GAAsB,IAAdqE,EAAa,uDAAN,EAClC,EAAKjC,MAAM7B,iBAAX,6DAAkFP,EAAlF,gCAAgHqE,EAAhH,gB,EAGJC,iBAAmB,SAACtE,GAAsB,IAAdqE,EAAa,uDAAN,EAC/B,EAAKjC,MAAM5B,cAAX,0DAA4ER,EAA5E,gCAA0GqE,K,EAI9GE,iBAAmB,SAAAC,GACc,IAAzB,EAAKtE,MAAMgE,WAAsC,MAAnBM,EAC9B,EAAKC,SAAS,CAAEP,UAAW,IACC,MAAnBM,EACT,EAAKC,SAAS,CAAEP,UAAW,EAAKhE,MAAMgE,UAAY,IACpB,MAAnBM,GACX,EAAKC,SAAS,CAAEP,UAAW,EAAKhE,MAAMgE,UAAY,K,EAIxDQ,cAAgB,SAAAF,GACY,IAAtB,EAAKtE,MAAMiE,QAAmC,MAAnBK,EAC3B,EAAKC,SAAS,CAAEN,OAAQ,IACI,MAAnBK,EACT,EAAKC,SAAS,CAAEN,OAAQ,EAAKjE,MAAMiE,OAAS,IAChB,MAAnBK,GACT,EAAKC,SAAS,CAAEN,OAAQ,EAAKjE,MAAMiE,OAAS,K,qFA9BhDQ,KAAKvC,MAAM4B,cAAX,6DAA+EW,KAAKvC,MAAMpC,SAC1F2E,KAAKP,oBAAoBO,KAAKvC,MAAMpC,QACpC2E,KAAKL,iBAAiBK,KAAKvC,MAAMpC,U,+BAgC3B,IAAD,OACC4E,EAAmC,UAAxBD,KAAKvC,MAAM3B,SAAuB,kBAACoE,GAAA,EAAD,CAAgBC,UAAQ,EAACC,KAAK,KAAKC,QAAS,SAACC,GAAK,EAAKV,iBAAiB,KAAMU,EAAEC,iBAAkB,EAAKd,oBAAoB,EAAKhC,MAAMpC,OAAQ,EAAKE,MAAMgE,cAAkB,kBAACW,GAAA,EAAD,CAAgBC,UAAQ,EAACC,KAAK,KAAKC,QAAS,SAACC,GAAK,EAAKP,cAAc,KAAMO,EAAEC,iBAAkB,EAAKZ,iBAAiB,EAAKlC,MAAMpC,OAAQ,EAAKE,MAAMiE,WAE3WgB,EAAsC,UAAxBR,KAAKvC,MAAM3B,SAAuB,kBAACoE,GAAA,EAAD,CAAgBO,MAAI,EAACL,KAAK,KAAKC,QAAS,SAACC,GAAK,EAAKV,iBAAiB,KAAMU,EAAEC,iBAAkB,EAAKd,oBAAoB,EAAKhC,MAAMpC,OAAQ,EAAKE,MAAMgE,cAAkB,kBAACW,GAAA,EAAD,CAAgBO,MAAI,EAACL,KAAK,KAAKC,QAAS,SAACC,GAAK,EAAKP,cAAc,KAAMO,EAAEC,iBAAkB,EAAKZ,iBAAiB,EAAKlC,MAAMpC,OAAQ,EAAKE,MAAMiE,WAE5W,OACI,kBAACkB,GAAA,EAAD,CAAY9C,MAAO,CAAC+C,UAAW,OAAQC,YAAa,OAAQC,aAAW,mBACpE,kBAACC,GAAA,EAAD,KACMb,GAEH,kBAACa,GAAA,EAAD,KACGN,Q,GApDKO,IAAMC,WA4EjBC,gBAjBS,SAAC1F,GACrB,MAAO,CACH2F,cAAe3F,EAAMK,iBACrBuF,UAAW5F,EAAMM,cACjBR,OAAQE,EAAMD,cAAcD,OAC5BS,SAAUP,EAAMQ,YAAYD,aAIT,SAAC2C,GACxB,MAAO,CACHY,cAAe,SAAAb,GAAG,OAAIC,EAASY,GAAcb,KAC7C5C,iBAAkB,SAAA4C,GAAG,OAAIC,EAAS7C,GAAiB4C,KACnD3C,cAAe,SAAA2C,GAAG,OAAIC,EAAS5C,GAAc2C,QAItCyC,CAA6C3B,I,8GCtB7C8B,GA3CA,SAAC3D,GAAW,IAAD,EACIC,oBAAS,GADb,oBACjB2D,EADiB,KACTC,EADS,KAKxB,OACE,yBAAK1D,MAAO,CAAC2D,SAAS,QAASC,IAAK,IAAIC,OAAO,MAAO1D,MAAM,SAC1D,kBAAC2D,GAAA,EAAD,CAAQpD,MAAM,OAAOqD,MAAI,EAACC,OAAO,MAC/B,kBAACC,GAAA,EAAD,CAAazB,KAAK,KAAI,kBAAC,KAAD,CAAiB7B,KAAK,SAA5C,iBACA,kBAACuD,GAAA,EAAD,CAAezB,QANN,kBAAMiB,GAAWD,MAO1B,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAACU,GAAA,EAAD,CAAUV,OAAQA,EAAQW,QAAM,GAC9B,kBAACC,GAAA,EAAD,CAAKC,UAAU,UAAUF,QAAM,GAC7B,kBAACG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAShC,KAAK,KAAd,SAEF,kBAAC+B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAShC,KAAK,KAAd,YAEF,kBAACiC,GAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,GAChC,kBAACC,GAAA,EAAD,CAAgBF,KAAG,EAACG,OAAK,GAAzB,YAGA,kBAACC,GAAA,EAAD,CAAcC,OAAK,GACjB,kBAACC,GAAA,EAAD,iBAGA,kBAACA,GAAA,EAAD,oBAGA,kBAACA,GAAA,EAAD,yBC5CD7G,GAJK,SAAAN,GAAI,MAAK,CAC3BA,KAAe,OAATA,ElBAwB,mBACG,wB,UmBE7BoH,G,sLAEQ,IAAD,OACL,OACE,yBAAKC,GAAG,iBAAiBlF,MAAO,CAACmF,QAAQ,OAAQjF,eAAe,WAC9D,kBAACkF,GAAA,EAAD,KACE,kBAAC3E,GAAA,EAAD,CAAQ4E,KAAK,KAAK3E,MAAM,UAAU4E,OAAgC,UAAxBlD,KAAKvC,MAAM3B,SAAsBuE,QAAS,kBAAM,EAAK5C,MAAM1B,YAAY,WAAjH,kBACA,kBAACsC,GAAA,EAAD,CAAQ4E,KAAK,KAAK3E,MAAM,UAAU4E,OAAgC,OAAxBlD,KAAKvC,MAAM3B,SAAmBuE,QAAS,kBAAM,EAAK5C,MAAM1B,YAAY,QAA9G,2B,GAPcgF,IAAMC,WA2BnBC,gBAZS,SAAC1F,GACrB,MAAO,CACHO,SAAUP,EAAMQ,YAAYD,aAIT,SAAC2C,GACxB,MAAO,CACH1C,YAAa,SAAAN,GAAI,OAAIgD,EAAS1C,GAAYN,QAInCwF,CAA6C4B,I,qBC0B7CM,I,OAvDA,WACb,OACE,4BAAQjB,UAAU,eAEhB,6BAASA,UAAU,mBAEjB,4BAAQA,UAAU,0BAChB,wBAAIA,UAAU,+CAA+CkB,iBAAe,MAAMC,oBAAkB,MAApG,gBACA,yBAAKnB,UAAU,8BACb,uBAAGA,UAAU,iBAAiBkB,iBAAe,MAAMC,oBAAkB,KAAKC,GAAG,KAA7E,QACA,uBAAGpB,UAAU,iBAAiBkB,iBAAe,MAAMC,oBAAkB,KAAKC,GAAG,WAA7E,WACA,uBAAGpB,UAAU,iBAAiBkB,iBAAe,OAAOC,oBAAkB,KAAKC,GAAG,aAA9E,cAIJ,yBAAKpB,UAAU,wBACb,wBAAIA,UAAU,+BAAd,cACA,2BAAG,uBAAG9B,KAAK,8BAA8BmD,OAAO,SAASC,IAAI,uBAA1D,yBAGL,yBAAKtB,UAAU,wBACb,wBAAIA,UAAU,+BAAd,iBACA,0CAGF,uBAAGA,UAAU,6BAAb,qBAA6D,6BAA7D,YAA4E,uBAAG9B,KAAK,0BAA0BmD,OAAO,SAASC,IAAI,uBAAtD,eAI9E,6BAAStB,UAAU,sBAEjB,yBAAKA,UAAU,4CAA4CkB,iBAAe,MAAMC,oBAAkB,KAAKI,IAAKC,KAAUC,IAAI,cAE1H,yBAAKzB,UAAU,gCAEb,uBAAG9B,KAAK,iCAAiCmD,OAAO,SAASC,IAAI,uBAC3D,yBAAKtB,UAAU,kDAAkDkB,iBAAe,MAAMC,oBAAkB,KAAKO,MAAM,6BAA6BC,QAAQ,eAAc,0BAAMC,EAAE,oiBAGhL,uBAAG1D,KAAK,sCAAsCmD,OAAO,SAASC,IAAI,uBAChE,yBAAKtB,UAAU,kDAAkDkB,iBAAe,MAAMC,oBAAkB,OAAOO,MAAM,6BAA6BC,QAAQ,eAAc,0BAAMC,EAAE,2RAGlL,uBAAG1D,KAAK,+CAA+CmD,OAAO,SAASC,IAAI,uBACzE,yBAAKtB,UAAU,kDAAkDkB,iBAAe,OAAOC,oBAAkB,OAAOO,MAAM,6BAA6BC,QAAQ,eAAc,0BAAMC,EAAE,4I,UCnB9KC,I,wMArBXC,YAAW,WAETC,SAASC,cAAc,qBAAqBtG,MAAMuG,WAAa,aAC/DF,SAASC,cAAc,qBAAqBtG,MAAMwG,QAAU,IAE5DJ,YAAW,WACTC,SAASC,cAAc,qBAAqBG,WAC3C,OAEF,O,+BAIC,OACE,yBAAKnC,UAAU,oBACb,kBAACoC,GAAA,EAAD,CAAShG,MAAM,QAAQ4D,UAAU,UAAUtE,MAAO,CAAEG,MAAO,OAAQwG,OAAQ,UAAa,S,GAnB/ExD,IAAMC,Y,4BC8DZwD,G,8MA9CTC,eAAiB,SAAAC,GACf,GAAI,EAAKjH,MAAMkH,YAAYC,OAAQ,CAC/B,IAAIC,EAAY,EAAKpH,MAAMkH,YAAYC,OAAOE,QAAO,SAAAC,GAAK,OAAIA,EAAMjC,KAAO4B,EAAS,IAAMK,EAAMjC,KAAO4B,EAAS,IAAMK,EAAMjC,KAAO4B,EAAS,GAAKK,EAAMC,KAAO,QAE9J,GAAGH,EAAU,GACT,OAAO,2BAAIA,EAAU,GAAKA,EAAU,GAAGG,KAAO,GAAvC,MAA8CH,EAAU,GAAKA,EAAU,GAAGG,KAAO,GAAjF,MAAwFH,EAAU,GAAKA,EAAU,GAAGG,KAAO,IAC/H,GAAGH,EAAU,KAAQA,EAAU,GAClC,OAAO,2BAAIA,EAAU,GAAKA,EAAU,GAAGG,KAAO,GAAvC,MAA8CH,EAAU,GAAKA,EAAU,GAAGG,KAAO,IACrF,GAAGH,EAAU,KAAOA,EAAU,KAAOA,EAAU,GAClD,OAAO,2BAAIA,EAAU,GAAKA,EAAU,GAAGG,KAAO,M,0EAMhD,IAAD,OAEL,OACQ,kBAAC,IAAMC,SAAP,KACI,yBAAK/C,UAAU,mCACdlC,KAAKvC,MAAMyH,MAAMC,KAAI,SAAAC,GAClB,OACI,kBAACC,GAAA,EAAD,CAAO5I,IAAK2I,EAAMtC,IAClB,kBAACuC,GAAA,EAAD,CAAOC,MAAI,EAAC9D,KAAG,EAACpB,KAAK,KACjB,kBAAC,KAAD,CAAMxC,MAAO,CAAE2H,eAAgB,QAAUjC,GAAE,mBAAc,EAAK7F,MAAMhC,KAAK+J,cAA9B,YAA+CJ,EAAMtC,KAC5F,kBAACuC,GAAA,EAAD,CAAOI,QAAM,EAAChC,IAAG,UAAK,EAAKhG,MAAMiI,UAAUC,OAAOC,gBAAjC,eAAuDR,EAAMS,aAAelC,IAAKyB,EAAMU,UAGhH,kBAACT,GAAA,EAAD,CAAOU,MAAI,GACX,kBAAC,KAAD,CAAMnI,MAAO,CAAE2H,eAAgB,OAAQjH,MAAO,WAAYyE,QAAS,gBAAkBO,GAAE,mBAAc,EAAK7F,MAAMhC,KAAK+J,cAA9B,YAA+CJ,EAAMtC,KACxI,kBAACuC,GAAA,EAAD,CAAOW,SAAO,GACTZ,EAAMU,QAGV,EAAKrB,eAAeW,EAAMa,WAAYb,EAAMc,aANjD,UAOKd,EAAMe,oB,GAjDXpF,IAAMC,WCwEnBoF,I,qNAvEX3B,eAAiB,SAAAC,GACb,GAAI,EAAKjH,MAAM4I,SAASzB,OAAQ,CAC5B,IAAIC,EAAY,EAAKpH,MAAM4I,SAASzB,OAAOE,QAAO,SAAAC,GAAK,OAAIA,EAAMjC,KAAO4B,EAAS,IAAMK,EAAMjC,KAAO4B,EAAS,IAAMK,EAAMjC,KAAO4B,EAAS,GAAKK,EAAMC,KAAO,QAE3J,GAAGH,EAAU,GACT,OAAO,2BAAIA,EAAU,GAAKA,EAAU,GAAGG,KAAO,GAAvC,MAA8CH,EAAU,GAAKA,EAAU,GAAGG,KAAO,GAAjF,MAAwFH,EAAU,GAAKA,EAAU,GAAGG,KAAO,IAC/H,GAAGH,EAAU,KAAQA,EAAU,GAClC,OAAO,2BAAIA,EAAU,GAAKA,EAAU,GAAGG,KAAO,GAAvC,MAA8CH,EAAU,GAAKA,EAAU,GAAGG,KAAO,IACrF,GAAGH,EAAU,KAAOA,EAAU,KAAOA,EAAU,GAClD,OAAO,2BAAIA,EAAU,GAAKA,EAAU,GAAGG,KAAO,M,0EAMhD,IAAD,OACL,OACQ,kBAAC,IAAMC,SAAP,KACI,yBAAK/C,UAAU,mCACdlC,KAAKvC,MAAMyH,MAAMC,KAAI,SAAAmB,GAClB,OACJ,kBAACjB,GAAA,EAAD,CAAO5I,IAAK6J,EAAKxD,IACb,kBAACuC,GAAA,EAAD,CAAOC,MAAI,EAAC9D,KAAG,EAACpB,KAAK,KACrB,kBAAC,KAAD,CAAMxC,MAAO,CAAE2H,eAAgB,QAAUjC,GAAE,mBAAc,EAAK7F,MAAMhC,KAAK+J,cAA9B,YAA+Cc,EAAKxD,KAC3F,kBAACuC,GAAA,EAAD,CAAOI,QAAM,EAAChC,IAAG,UAAK,EAAKhG,MAAMiI,UAAUC,OAAOC,gBAAjC,eAAuDU,EAAKT,aAAelC,IAAK2C,EAAKtB,SAG1G,kBAACK,GAAA,EAAD,CAAOU,MAAI,GACP,kBAACV,GAAA,EAAD,CAAOW,SAAO,GACV,kBAAC,KAAD,CAAMpI,MAAO,CAAE2H,eAAgB,OAAQjH,MAAO,WAAYyE,QAAS,gBAAkBO,GAAE,mBAAc,EAAK7F,MAAMhC,KAAK+J,cAA9B,YAA+Cc,EAAKxD,KACtIwD,EAAKtB,OAGb,EAAKP,eAAe6B,EAAKL,WAAYK,EAAKJ,aAN/C,UAOKI,EAAKH,oB,GAnCLpF,IAAMC,Y,2DCoEpBuF,GA/DF,SAAC,GAAoC,IAAlCrB,EAAiC,EAAjCA,MAAOQ,EAA0B,EAA1BA,UAAW5J,EAAe,EAAfA,SAAe,EACT4B,mBAAS,GADA,oBACxC8I,EADwC,KAC3BC,EAD2B,OAEb/I,oBAAS,GAFI,oBAExCgJ,EAFwC,KAE7BC,EAF6B,KAIzClG,EAAO,WACX,IAAIiG,EAAJ,CACA,IAAME,EAAYJ,IAAgBtB,EAAM2B,OAAS,EAAI,EAAIL,EAAc,EACvEC,EAAeG,KAGXzG,EAAW,WACf,IAAIuG,EAAJ,CACA,IAAME,EAA4B,IAAhBJ,EAAoBtB,EAAM2B,OAAS,EAAIL,EAAc,EACvEC,EAAeG,KAQXE,EAAsB,UAAbhL,EAAwBoJ,EAAMC,KAAI,SAACC,GAChD,OACE,kBAAC2B,GAAA,EAAD,CACE7E,UAAU,iBACV8E,UAAW,kBAAML,GAAa,IAC9BM,SAAU,kBAAMN,GAAa,IAC7BlK,IAAK2I,EAAMtC,IACZ,yBAAKZ,UAAU,yBACd,yBAAKtE,MAAO,CAAC2G,OAAQ,OAAQxG,MAAO,QAAQ0F,IAAG,UAAKiC,EAAUC,OAAOC,gBAAtB,mBAAgDR,EAAM8B,eAAiBvD,IAAKyB,EAAMU,SAEjI,kBAACqB,GAAA,EAAD,CAAiBC,YAAahC,EAAMiC,aAAcC,cAAelC,EAAMU,YAGtEZ,EAAMC,KAAI,SAACoC,GAChB,OACE,kBAACR,GAAA,EAAD,CACE7E,UAAU,iBACV8E,UAAW,kBAAML,GAAa,IAC9BM,SAAU,kBAAMN,GAAa,IAC7BlK,IAAK8K,EAAGzE,IACT,yBAAKZ,UAAU,yBACd,yBAAKtE,MAAO,CAAC2G,OAAQ,OAAQxG,MAAO,QAAQ0F,IAAG,UAAKiC,EAAUC,OAAOC,gBAAtB,mBAAgD2B,EAAGL,eAAiBvD,IAAK4D,EAAGvC,QAE3H,kBAACmC,GAAA,EAAD,CAAiBC,YAAaG,EAAGC,eAAgBF,cAAeC,EAAGvC,WAKzE,OACE,kBAACyC,GAAA,EAAD,CACEjB,YAAaA,EACb/F,KAAMA,EACNN,SAAUA,GAEV,kBAACuH,GAAA,EAAD,CAAoBxC,MAAOA,EAAOsB,YAAaA,EAAamB,eAvC9C,SAACC,GACblB,GACJD,EAAemB,MAsCZd,EACD,kBAACe,GAAA,EAAD,CAAiBC,UAAU,OAAOC,cAAc,WAAWJ,eAAgBxH,IAC3E,kBAAC0H,GAAA,EAAD,CAAiBC,UAAU,OAAOC,cAAc,OAAOJ,eAAgBlH,MCtDvEuH,G,iMAGEhI,KAAKvC,MAAM7B,iBAAX,6DAAkFoE,KAAKvC,MAAMpC,OAA7F,qCACA2E,KAAKvC,MAAM5B,cAAX,0DAA4EmE,KAAKvC,MAAMpC,OAAvF,2BACA2E,KAAKvC,MAAM1B,gB,+BAKX,IAAMkM,EAAyC,UAAxBjI,KAAKvC,MAAM3B,SAAuB,kBAAC,GAAD,CAAeL,KAAMuE,KAAKvC,MAAM3B,SAAU6I,YAAa3E,KAAKvC,MAAMkH,YAAamB,MAAM,iBAAiBJ,UAAW1F,KAAKvC,MAAMyK,OAAQhD,MAAOlF,KAAKvC,MAAMyD,cAAcvF,UAAc,kBAAC,GAAD,CAAgBF,KAAMuE,KAAKvC,MAAM3B,SAAUuK,SAAUrG,KAAKvC,MAAM4I,SAAUP,MAAM,mBAAmBJ,UAAW1F,KAAKvC,MAAMyK,OAAQhD,MAAOlF,KAAKvC,MAAM0D,UAAUxF,UAElYwM,EAA6C,UAAxBnI,KAAKvC,MAAM3B,SAAuB,kBAAC,GAAD,CAAc4J,UAAW1F,KAAKvC,MAAMyK,OAAQhD,MAAOlF,KAAKvC,MAAMyD,cAAcvF,QAASG,SAAUkE,KAAKvC,MAAM3B,WAAc,kBAAC,GAAD,CAAc4J,UAAW1F,KAAKvC,MAAMyK,OAAQpM,SAAUkE,KAAKvC,MAAM3B,SAAUoJ,MAAOlF,KAAKvC,MAAM0D,UAAUxF,UAE5R,OACA,yBAAKiC,MAAO,CAAC+C,UAAW,SACpB,kBAAC,GAAD,MACA,6BACKwH,GAEL,kBAAC,GAAD,MACA,6BACKF,GAEL,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GAzBOlH,IAAMC,WAmDVC,gBApBS,SAAC1F,GACrB,MAAO,CACH2M,OAAQ3M,EAAMD,cACdD,OAAQE,EAAMD,cAAcD,OAC5B6F,cAAe3F,EAAMK,iBACrBuF,UAAW5F,EAAMM,cACjBC,SAAUP,EAAMQ,YAAYD,SAC5B6I,YAAapJ,EAAMS,cACnBqK,SAAU9K,EAAMU,eAIG,SAACwC,GACxB,MAAO,CACH7C,iBAAkB,SAAA4C,GAAG,OAAIC,EAAS7C,GAAiB4C,KACnD3C,cAAe,SAAA2C,GAAG,OAAIC,EAAS5C,GAAc2C,KAC7CzC,YAAa,SAAAN,GAAI,OAAIgD,EAAS1C,GAAYN,QAInCwF,CAA6C+G,ICvDtDI,GAAmB,SAAA1M,GACrB,MAAO,CACHD,K1BNyB,oB0BOzBC,YCHF2M,GAAmB,SAAA3M,GACrB,MAAO,CACHD,K3BJyB,oB2BKzBC,YCHF4M,GAAmB,SAAA5M,GACrB,MAAO,CACHD,K5BFyB,oB4BGzBC,YCHF6M,GAAkB,SAAA7M,GACpB,MAAO,CACHD,K7BDwB,mB6BExBC,Y,6BCAF8M,G,iMAGExI,KAAKyI,UAAUzI,KAAKvC,MAAMiL,MAAMC,OAAO7F,M,gCAIjCA,GAA0C,IAAtCrH,EAAqC,uDAA9BuE,KAAKvC,MAAMiL,MAAMC,OAAOlN,KACzC,OAAOA,GACH,IAAK,QACDuE,KAAKvC,MAAMvB,gBAAX,6CAAiE4G,EAAjE,oBAA+E9C,KAAKvC,MAAMpC,OAA1F,oBACA2E,KAAKvC,MAAMtB,gBAAX,6CAAiE2G,EAAjE,4BAAuF9C,KAAKvC,MAAMpC,SAClG2E,KAAKvC,MAAMrB,gBAAX,6CAAiE0G,EAAjE,4BAAuF9C,KAAKvC,MAAMpC,OAAlG,2BACA2E,KAAKvC,MAAMpB,eAAX,6CAAgEyG,EAAhE,2BAAqF9C,KAAKvC,MAAMpC,OAAhG,uB,+BAcR,OACI,6BACI,kBAAC,GAAD,MACI,kBAACuN,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAOpF,IAAG,UAAKzD,KAAKvC,MAAMyK,OAAOvC,OAAOC,gBAA9B,eAAoD5F,KAAKvC,MAAMqL,aAAajD,aAAekD,SAAO,EAACC,IAAI,IACjH,kBAACJ,GAAA,EAAKK,QAAN,KACA,kBAACL,GAAA,EAAKxH,OAAN,KAAcpB,KAAKvC,MAAMqL,aAAahD,OACtC,kBAAC8C,GAAA,EAAKM,KAAN,KACI,0BAAMhH,UAAU,QAAQlC,KAAKvC,MAAMqL,aAAazB,eAEpD,kBAACuB,GAAA,EAAKO,YAAN,KACKnJ,KAAKvC,MAAMqL,aAAaM,UAG7B,kBAACR,GAAA,EAAKK,QAAN,CAAcI,OAAK,KAG3B,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GA7CUtI,IAAMC,WA4EjBC,gBAzBS,SAAC1F,GACrB,MAAO,CACH2M,OAAQ3M,EAAMD,cACdD,OAAQE,EAAMD,cAAcD,OAC5B6F,cAAe3F,EAAMK,iBACrBuF,UAAW5F,EAAMM,cACjBC,SAAUP,EAAMQ,YAAYD,SAC5B6I,YAAapJ,EAAMS,cACnBqK,SAAU9K,EAAMU,WAChB6M,aAAcvN,EAAMW,gBACpBoN,aAAc/N,EAAMY,gBACpBoN,aAAchO,EAAMa,gBACpBoN,YAAajO,EAAMc,mBAIA,SAACoC,GACxB,MAAO,CACHvC,gBAAiB,SAAAsC,GAAG,OAAIC,EJjFD,SAAAD,GAAG,OAAI,SAAAC,GAClCC,MAAMF,GACLG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EAAS2J,GAAiBtJ,OACvCE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OI4EqB/C,CAAgBsC,KACjDrC,gBAAiB,SAAAqC,GAAG,OAAIC,EHlFD,SAAAD,GAAG,OAAI,SAAAC,GAClCC,MAAMF,GACLG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EAAS4J,GAAiBvJ,OACvCE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OG6EqB9C,CAAgBqC,KACjDpC,gBAAiB,SAAAoC,GAAG,OAAIC,EFnFD,SAAAD,GAAG,OAAI,SAAAC,GAClCC,MAAMF,GACLG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EAAS6J,GAAiBxJ,OACvCE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OE8EqB7C,CAAgBoC,KACjDnC,eAAgB,SAAAmC,GAAG,OAAIC,EDpFD,SAAAD,GAAG,OAAI,SAAAC,GACjCC,MAAMF,GACLG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EAAS8J,GAAgBzJ,OACtCE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OC+EoB5C,CAAemC,QAIxCyC,CAA6CuH,I,SC/EtDiB,GAAiB,SAAA/N,GACnB,MAAO,CACHD,K/BRuB,kB+BSvBC,YCHFgO,GAAc,SAAAhO,GAChB,MAAO,CACHD,KhCPoB,egCQpBC,Y,yBCDRiO,KAAQC,IAAIC,KAAKC,KAAQC,M,IAEnBC,G,iMAGEhK,KAAKvC,MAAM4B,cAAX,6DAA+EW,KAAKvC,MAAMpC,SAC1F2E,KAAKvC,MAAMzB,cAAX,gEAAkFgE,KAAKvC,MAAMpC,OAA7F,8BAEA2E,KAAKvC,MAAMxB,WAAX,6DAA4E+D,KAAKvC,MAAMpC,OAAvF,8BAEA2E,KAAKvC,MAAM1B,gB,+BAKX,OACA,kBAAC,KAAD,KACI,yBAAKmG,UAAU,QACX,kBAAC,KAAD,CAAO+H,KAAK,IAAIC,OAAK,EAACC,UAAWnC,KACjC,kBAAC,KAAD,CAAOiC,KAAK,qBAAqBC,OAAK,EAACC,UAAW3B,KAClD,kBAAC,KAAD,CAAOyB,KAAK,sBAAsBC,OAAK,EAACC,UAAU,qBAClD,kBAAC,KAAD,CAAOF,KAAK,YAAYC,OAAK,EAACC,UAAU,eAExC,kBAAC,KAAD,KAGI,kBAAC,KAAD,CAAOF,KAAK,UAAUC,OAAK,EAACC,UAAU,gBACtC,kBAAC,KAAD,CAAOF,KAAK,mBAAmBC,OAAK,EAACC,UAAU,mBAE7CnK,KAAKvC,MAAM2M,aAAepK,KAAKvC,MAAM4M,QAAQC,QAAW,kBAAC,KAAD,CAAUC,KAAK,WAAWjH,GAAG,YAAe,kBAAC,KAAD,CAAUiH,KAAK,WAAWjH,GAAG,uBACjItD,KAAKvC,MAAM2M,aAAepK,KAAKvC,MAAM4M,QAAQC,QAAW,kBAAC,KAAD,CAAUC,KAAK,oBAAoBjH,GAAG,YAAe,kBAAC,KAAD,CAAUiH,KAAK,UAAUjH,GAAG,sBAC9G,WAA3BtD,KAAKvC,MAAM2M,YAA2B,kBAAC,KAAD,CAAUG,KAAK,UAAUjH,GAAG,mBAAsB,kBAAC,KAAD,CAAUiH,KAAK,iBAAiBjH,GAAG,mB,GA7B/HvC,IAAMC,WAuDTC,gBAhBS,SAAC1F,GACrB,MAAO,CACH2M,OAAQ3M,EAAMD,cACdD,OAAQE,EAAMD,cAAcD,WAIT,SAACoD,GACxB,MAAO,CACHY,cAAe,SAAAb,GAAG,OAAIC,EAASY,GAAcb,KAC7CzC,YAAa,SAAAN,GAAI,OAAIgD,EAAS1C,GAAYN,KAC1CO,cAAe,SAAAwC,GAAG,OAAIC,EF/DD,SAAAD,GAAG,OAAI,SAAAC,GAChCC,MAAMF,GACLG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EAASgL,GAAe3K,OACrCE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OE0DmBjD,CAAcwC,KAC7CvC,WAAY,SAAAuC,GAAG,OAAIC,EDhED,SAAAD,GAAG,OAAI,SAAAC,GAC7BC,MAAMF,GACLG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EAASiL,GAAY5K,OAClCE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OC2DgBhD,CAAWuC,QAIhCyC,CAA6C+I,IC1DxCQ,QACW,cAA7BxN,OAAOyN,SAASC,UAEe,UAA7B1N,OAAOyN,SAASC,UAEhB1N,OAAOyN,SAASC,SAAShC,MACvB,2D,cCLNiC,IAASC,OACL,kBAAC,KAAD,CAAaC,QAAS9G,GAAQzG,UAAWA,IACrC,kBAAC,IAAD,CAAUH,MAAOA,IACb,kBAAC,GAAD,QAGZ8G,SAAS6G,eAAe,SD8GlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtM,MAAK,SAAAuM,GACjCA,EAAaC,kB","file":"static/js/main.465e44cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TMDBLogo.12d095ee.svg\";","import { POST_MDB_CONFIG } from '../actions/types';\n\nconst initialState = {\n  apiKey: '150d7fd25460a548b06c13686a6bad55'\n};\n\nconst PostMDBConfig = (state = initialState, action) => {\n  switch (action.type) {\n    case POST_MDB_CONFIG:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport default PostMDBConfig;","export const POST_MDB_CONFIG = 'POST_MDB_CONFIG';\nexport const POST_MOVIE_POPULAR = 'POST_MOVIE_POPULAR';\nexport const POST_TV_POPULAR = 'POST_TV_POPULAR';\nexport const SET_ITEM_TYPE_TV = 'SET_ITEM_TYPE_TV';\nexport const SET_ITEM_TYPE_MOVIE = 'SET_ITEM_TYPE_MOVIE';\nexport const GET_MOVIE_GENRE = 'GET_MOVIE_GENRE';\nexport const GET_TV_GENRE = 'GET_TV_GENRE';\nexport const GET_MOVIE_DETAILS = 'GET_MOVIE_DETAILS';\nexport const GET_TV_DETAILS = 'GET_TV_DETAILS';\nexport const GET_MOVIE_CREDITS = 'GET_MOVIE_CREDITS';\nexport const GET_TV_CREDITS = 'GET_TV_CREDITS';\nexport const GET_MOVIE_REVIEWS = 'GET_MOVIE_REVIEWS';\nexport const GET_MOVIE_VIDEOS = 'GET_MOVIE_VIDEOS';","import { POST_MOVIE_POPULAR } from '../actions/types';\n\nconst initialState = {\n    results: []\n}\n\nconst postMoviePopular = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_MOVIE_POPULAR:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default: \n            return state;\n    }\n\n}\n\nexport default postMoviePopular;","import { POST_TV_POPULAR } from '../actions/types';\n\nconst initialState = {\n    results: []\n}\n\nconst postTVPopular = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_TV_POPULAR:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default postTVPopular;","import { SET_ITEM_TYPE_MOVIE, SET_ITEM_TYPE_TV } from '../actions/types';\n\nconst initialState = {\n  itemType: 'TV'\n};\n\nconst setItemType = (state = initialState, action) => {\n  switch(action.type) {\n    case SET_ITEM_TYPE_MOVIE:\n      return {\n        itemType: 'MOVIE'\n      };\n    case SET_ITEM_TYPE_TV:\n      return {\n        itemType: 'TV'\n      };\n    default:\n      return state;\n  }\n};\n\nexport default setItemType;\n","import { GET_MOVIE_GENRE } from '../actions/types';\n\nconst initialState = [];\n\nconst getMovieGenre = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_MOVIE_GENRE:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getMovieGenre;\n","import { GET_TV_GENRE } from '../actions/types';\n\nconst initialState = [];\n\nconst getTVGenre = (state = initialState, action) => {\n    switch(action.type){ \n        case GET_TV_GENRE:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getTVGenre;","import { GET_MOVIE_DETAILS } from '../actions/types';\n\nconst initialState = [];\n\nconst getMovieDetails = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_MOVIE_DETAILS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getMovieDetails;","import { GET_MOVIE_CREDITS } from '../actions/types';\n\nconst initialState = [];\n\nconst getMovieCredits = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_MOVIE_CREDITS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getMovieCredits;","import { GET_MOVIE_REVIEWS } from '../actions/types';\n\nconst initialState = [];\n\nconst getMovieReviews = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_MOVIE_REVIEWS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getMovieReviews;","import { GET_MOVIE_VIDEOS } from '../actions/types';\n\nconst initialState = [];\n\nconst getMovieVideos = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_MOVIE_VIDEOS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getMovieVideos;","import { combineReducers } from 'redux';\nimport PostMDBConfig from './PostMDBConfigReducer';\nimport postMoviePopular from './postMoviePopularReducer';\nimport postTVPopular from './postTVPopularReducer';\nimport setItemType from './setItemTypeReducer';\nimport getMovieGenre from './getMovieGenreReducer';\nimport getTVGenre from './getTVGenreReducer';\nimport getMovieDetails from './getMovieDetailsReducer';\nimport getMovieCredits from './getMovieCreditsReducer';\nimport getMovieReviews from './getMovieReviewsReducer';\nimport getMovieVideos from './getMovieVideosReducer';\n\nconst rootReducer = combineReducers({\n    PostMDBConfig,\n    postMoviePopular,\n    postTVPopular,\n    setItemType,\n    getMovieGenre,\n    getTVGenre,\n    getMovieDetails,\n    getMovieCredits,\n    getMovieReviews,\n    getMovieVideos\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst middleware = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(persistedReducer, composeEnhancers(applyMiddleware(...middleware)));\nexport const persistor = persistStore(store);\n\n\n ","import './SearchBar.scss';\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    InputGroup,\n    InputGroupAddon,\n    InputGroupButtonDropdown,\n    Input,\n    Button,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n   } from 'reactstrap';\n\nconst SearchBar = (props) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [splitButtonOpen, setSplitButtonOpen] = useState(false);\n\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\n\n  const toggleSplit = () => setSplitButtonOpen(!splitButtonOpen);\n\n  return (\n    <InputGroup style={{ flexDirection: \"row\", justifyContent: \"center\", width: \"50%\",alignItems: \"center\"}}>\n        <Input placeholder=\"Search...\" />\n        <InputGroupAddon addonType=\"append\"><Button color=\"primary\" type=\"submit\"><FontAwesomeIcon icon=\"search\"/></Button></InputGroupAddon>\n    </InputGroup>\n  );\n}\n\n\nexport default SearchBar;","import { POST_MOVIE_POPULAR } from './types';\n\nexport const postMoviePopular = url => dispatch => {\n    fetch(url)\n    .then(res => res.json())\n    .then(data => dispatch(saveMoviePopular(data)))\n    .catch(error => {\n      console.log(error);\n    })\n}\n\nconst saveMoviePopular = payload => {\n    return {\n        type: POST_MOVIE_POPULAR,\n        payload\n    }\n}","import { POST_TV_POPULAR } from './types';\n\nexport const postTVPopular = url => dispatch => {\n    fetch(url)\n    .then(res => res.json())\n    .then(data => dispatch(saveTVPopular(data)))\n    .catch(error => {\n        console.log(error);\n    })\n}\n\nconst saveTVPopular = payload => {\n    return {\n        type: POST_TV_POPULAR,\n        payload\n    }\n}","import { POST_MDB_CONFIG } from './types.js';\n\nconst saveMDBConfig = payload => ({\n  type: POST_MDB_CONFIG,\n  payload\n});\n\nexport const postMDBConfig = url => {\n  return dispatch => {\n    fetch(url)\n    .then(res => res.json())\n    .then(data => dispatch(saveMDBConfig(data)))\n    .catch(error => console.log(error));\n  }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport { postMoviePopular } from '../../actions/postMoviePopularAction';\nimport { postTVPopular } from '../../actions/postTVPopularAction';\nimport { postMDBConfig } from '../../actions/PostMDBConfigAction';\n\n\nclass Paginations extends React.Component {\n        state = {\n            moviePage: 1,\n            tvPage: 1\n        };\n \n    componentDidMount() {\n        this.props.postMDBConfig(`https://api.themoviedb.org/3/configuration?api_key=${this.props.apiKey}`);\n        this.handleFetchNewMovie(this.props.apiKey);\n        this.handleFetchNewTV(this.props.apiKey);\n      }\n\n    handleFetchNewMovie = (apiKey, page = 1) => {\n        this.props.postMoviePopular(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=${page}&region=US`);\n    }\n\n    handleFetchNewTV = (apiKey, page = 1) => {\n        this.props.postTVPopular(`https://api.themoviedb.org/3/tv/popular?api_key=${apiKey}&language=en-US&page=${page}`);\n    }\n\n\n    handleMovieClick = pageTransition => {\n        if (this.state.moviePage === 1 && pageTransition === '-') {\n            this.setState({ moviePage: 1 });\n          } else if (pageTransition === '+') {\n            this.setState({ moviePage: this.state.moviePage + 1})\n            } else if (pageTransition === '-') {\n            this.setState({ moviePage: this.state.moviePage - 1})\n          }\n      };\n\n      handleTVClick = pageTransition => {\n        if (this.state.tvPage === 1 && pageTransition === '-') {\n            this.setState({ tvPage: 1 });\n          } else if (pageTransition === '+') {\n            this.setState({ tvPage: this.state.tvPage + 1 })\n          } else if (pageTransition === '-') {\n            this.setState({ tvPage: this.state.tvPage - 1 })\n          }\n      }\n\n    render() {\n        const pageBack = this.props.itemType === 'MOVIE' ? <PaginationLink previous href=\"#!\" onClick={(e)=>{this.handleMovieClick('-'); e.preventDefault(); this.handleFetchNewMovie(this.props.apiKey, this.state.moviePage)}} /> : <PaginationLink previous href=\"#!\" onClick={(e)=>{this.handleTVClick('-'); e.preventDefault(); this.handleFetchNewTV(this.props.apiKey, this.state.tvPage)}} />\n\n        const pageForward = this.props.itemType === 'MOVIE' ? <PaginationLink next href=\"#!\" onClick={(e)=>{this.handleMovieClick('+'); e.preventDefault(); this.handleFetchNewMovie(this.props.apiKey, this.state.moviePage)}} /> : <PaginationLink next href=\"#!\" onClick={(e)=>{this.handleTVClick('+'); e.preventDefault(); this.handleFetchNewTV(this.props.apiKey, this.state.tvPage)}} />\n\n        return (\n            <Pagination style={{marginTop: \"17px\", paddingLeft: \"5px\"}} aria-label=\"Page navigation\">\n               <PaginationItem>\n                    {pageBack}\n                  </PaginationItem>\n                  <PaginationItem>\n                    {pageForward}\n                  </PaginationItem>\n                </Pagination>\n              );\n         }\n    }\n\nconst mapStateToProps = (state) => {\n    return {\n        moviesPopular: state.postMoviePopular,\n        tvPopular: state.postTVPopular,\n        apiKey: state.PostMDBConfig.apiKey,\n        itemType: state.setItemType.itemType\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        postMDBConfig: url => dispatch(postMDBConfig(url)),\n        postMoviePopular: url => dispatch(postMoviePopular(url)),\n        postTVPopular: url => dispatch(postTVPopular(url))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Paginations);","import React, { useState } from 'react';\nimport SearchBar from '../SearchBar/SearchBar';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Header.scss';\nimport Paginations from '../Paginations/Paginations';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\n\nconst Header = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div style={{position:\"fixed\", top: \"0\",zIndex:\"100\", width:\"100%\"}}>\n      <Navbar color=\"dark\" dark expand=\"md\">\n        <NavbarBrand href=\"/\"><FontAwesomeIcon icon=\"film\" /> Movie Finder</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <SearchBar/>\n        <Paginations />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/\">Home</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/\">Profile</NavLink>\n            </NavItem>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Discover\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  Upcoming\n                </DropdownItem>\n                <DropdownItem>\n                  Now Playing\n                </DropdownItem>\n                <DropdownItem>\n                  Top Rated\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Header;","import { SET_ITEM_TYPE_MOVIE, SET_ITEM_TYPE_TV } from './types';\n\nconst setItemType = type => ({\n  type: type === 'TV' ? SET_ITEM_TYPE_TV : SET_ITEM_TYPE_MOVIE\n});\n\nexport default setItemType;\n","import React from 'react';\nimport setItemType from '../../actions/setItemTypeAction';\nimport { connect } from 'react-redux';\nimport { Button, ButtonGroup } from 'reactstrap';\n\n\nclass ToggleButtons extends React.Component {\n\n    render() {\n        return (\n          <div id=\"toggle-buttons\" style={{display:\"flex\", justifyContent:\"center\"}}>\n            <ButtonGroup>\n              <Button size=\"lg\" color=\"primary\" active={this.props.itemType === 'MOVIE'} onClick={() => this.props.setItemType('MOVIE')}>Popular Movies</Button>\n              <Button size=\"lg\" color=\"primary\" active={this.props.itemType === 'TV'} onClick={() => this.props.setItemType('TV')}>Trending TV Shows</Button>\n            </ButtonGroup>\n            {/* <p>Selected: {rSelected}</p> */}\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        itemType: state.setItemType.itemType\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setItemType: type => dispatch(setItemType(type))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToggleButtons);","import React from 'react';\nimport TMDBLogo from './images/TMDBLogo.svg';\nimport './Footer.scss';\n\nconst Footer = () => {\n  return(\n    <footer className=\"main-footer\">\n\n      <section className=\"main-footer-top\">\n\n        <header className=\"main-footer-top-header\">\n          <h2 className=\"main-footer-top-header__title wow fadeInLeft\" data-wow-delay=\".5s\" data-wow-duration=\"1s\">Movie Finder</h2>\n          <nav className=\"main-footer-top-header-nav\">\n            <a className=\"wow fadeInLeft\" data-wow-delay=\".7s\" data-wow-duration=\"1s\" to=\"/\">Home</a>\n            <a className=\"wow fadeInLeft\" data-wow-delay=\".9s\" data-wow-duration=\"1s\" to=\"/log-in\">Profile</a>\n            <a className=\"wow fadeInLeft\" data-wow-delay=\"1.1s\" data-wow-duration=\"1s\" to=\"/discover\">Discover</a>\n          </nav>\n        </header>\n\n        <div className=\"main-footer-top-item\">\n          <h3 className=\"main-footer-top-item__title\">portfolio:</h3>\n          <p><a href=\"https://kevinkaos.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">kevinkaos.github.io</a></p>\n        </div>\n\n        <div className=\"main-footer-top-item\">\n          <h3 className=\"main-footer-top-item__title\">phone number:</h3>\n          <p>0963546540</p>\n        </div>\n\n        <p className=\"main-footer-top-copyright\">Copyright &copy;2019<br /> Code by <a href=\"www.abwtechnologies.com\" target=\"_blank\" rel=\"noopener noreferrer\">Kevin Kao</a></p>\n\n      </section>\n\n      <section className=\"main-footer-bottom\">\n\n        <img className=\"main-footer-bottom-section-1 wow fadeInUp\" data-wow-delay=\".5s\" data-wow-duration=\"1s\" src={TMDBLogo} alt=\"TMDB Logo\" />\n\n        <div className=\"main-footer-bottom-section-2\">\n\n          <a href=\"https://twitter.com/themoviedb\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <svg className=\"main-footer-bottom-section-2__icon wow fadeInUp\" data-wow-delay=\".7s\" data-wow-duration=\"1s\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M492 109.5c-17.4 7.7-36 12.9-55.6 15.3 20-12 35.4-31 42.6-53.6-18.7 11.1-39.4 19.2-61.5 23.5C399.8 75.8 374.6 64 346.8 64c-53.5 0-96.8 43.4-96.8 96.9 0 7.6.8 15 2.5 22.1-80.5-4-151.9-42.6-199.6-101.3-8.3 14.3-13.1 31-13.1 48.7 0 33.6 17.2 63.3 43.2 80.7-16-.4-31-4.8-44-12.1v1.2c0 47 33.4 86.1 77.7 95-8.1 2.2-16.7 3.4-25.5 3.4-6.2 0-12.3-.6-18.2-1.8 12.3 38.5 48.1 66.5 90.5 67.3-33.1 26-74.9 41.5-120.3 41.5-7.8 0-15.5-.5-23.1-1.4C62.8 432 113.7 448 168.3 448 346.6 448 444 300.3 444 172.2c0-4.2-.1-8.4-.3-12.5C462.6 146 479 129 492 109.5z\"/></svg>\n          </a>\n\n          <a href=\"https://www.facebook.com/themoviedb\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <svg className=\"main-footer-bottom-section-2__icon wow fadeInUp\" data-wow-delay=\".9s\" data-wow-duration=\"1.2s\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M426.8 64H85.2C73.5 64 64 73.5 64 85.2v341.6c0 11.7 9.5 21.2 21.2 21.2H256V296h-45.9v-56H256v-41.4c0-49.6 34.4-76.6 78.7-76.6 21.2 0 44 1.6 49.3 2.3v51.8h-35.3c-24.1 0-28.7 11.4-28.7 28.2V240h57.4l-7.5 56H320v152h106.8c11.7 0 21.2-9.5 21.2-21.2V85.2c0-11.7-9.5-21.2-21.2-21.2z\"/></svg>\n          </a>\n\n          <a href=\"https://www.themoviedb.org/documentation/api\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <svg className=\"main-footer-bottom-section-2__icon wow fadeInUp\" data-wow-delay=\"1.1s\" data-wow-duration=\"1.2s\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M190.4 354.1L91.9 256l98.4-98.1-30-29.9L32 256l128.4 128 30-29.9zm131.2 0L420 256l-98.4-98.1 30-29.9L480 256 351.6 384l-30-29.9z\"/></svg>\n          </a>\n\n        </div>\n\n      </section>\n\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { Spinner } from 'reactstrap';\nimport './Loader.scss';\nimport React from 'react';\n\nclass Loader extends React.Component {\n\n    // Sets the opacity to 0 100ms after component mounted and removes loader from DOM 2 seconds after\n  componentDidMount() {\n    setTimeout(() => {\n\n      document.querySelector('.loader-container').style.transition = 'opacity 5s';\n      document.querySelector('.loader-container').style.opacity = '0';\n\n      setTimeout(() => {\n        document.querySelector('.loader-container').remove();\n      }, 2000);\n\n    }, 100);\n  }\n\n    render() {\n        return (\n          <div className=\"loader-container\">\n            <Spinner color=\"light\" className=\"spinner\" style={{ width: '3rem', height: '3rem' }} />{' '}\n          </div>\n        );\n    }\n}\n\nexport default Loader;\n\n","import React from 'react';\nimport './PopularMovies.scss';\nimport { Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\n\nclass PopularMovies extends React.Component {\n\n    // handleGetGenre = genreId => {\n    //     let mainGenre;\n    //     if (this.props.movieGenres.genres) {\n    //       this.props.movieGenres.genres.forEach(genre => {\n    //         if (genre.id === genreId[0]) {\n    //           mainGenre = genre.name;\n    //         }\n    //       });\n    //     }\n    //     return mainGenre;\n    //   }\n\n      handleGetGenre = genreIds => {\n        if (this.props.movieGenres.genres) {\n            let genresArr = this.props.movieGenres.genres.filter(genre => genre.id === genreIds[0] || genre.id === genreIds[1] || genre.id === genreIds[2] ? genre.name : null);\n        \n            if(genresArr[2]){\n                return <p>{genresArr[0] ? genresArr[0].name : ''} | {genresArr[1] ? genresArr[1].name : ''} | {genresArr[2] ? genresArr[2].name : ''}</p>\n            } else if(genresArr[1] && ! genresArr[2]) {\n                return <p>{genresArr[0] ? genresArr[0].name : ''} | {genresArr[1] ? genresArr[1].name : ''}</p>\n            } else if(genresArr[0] && !genresArr[1] && !genresArr[2]) {\n                return <p>{genresArr[0] ? genresArr[0].name : ''}</p>\n            }\n          \n      }\n    }\n\n    render() {\n\n        return (\n                <React.Fragment>\n                    <div className=\"popular__movies-list--container\">\n                    {this.props.items.map(movie => {\n                        return (\n                            <Media key={movie.id}>\n                            <Media left top href=\"#\">\n                                <Link style={{ textDecoration: 'none' }} to={`/details/${this.props.type.toLowerCase()}/${movie.id}`}>\n                                    <Media object src={`${this.props.MDBConfig.images.secure_base_url}w154${movie.poster_path}`} alt={movie.title}/>\n                                </Link>\n                            </Media>\n                            <Media body>\n                            <Link style={{ textDecoration: 'none', color: 'darkblue', display: \"inline-block\" }} to={`/details/${this.props.type.toLowerCase()}/${movie.id}`}>\n                                <Media heading>\n                                    {movie.title}\n                                </Media>\n                            </Link>\n                                {this.handleGetGenre(movie.genre_ids)}{movie.vote_average} Rating\n                                {movie.overview}\n                            </Media>\n                        </Media>\n                    \n                        );\n                    })}\n                    </div>\n                </React.Fragment>);\n    }\n};\n\nexport default PopularMovies;","import React from 'react';\nimport './PopularTVShows.scss';\nimport { Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\n\nclass PopularTVShows extends React.Component {\n    handleGetGenre = genreIds => {\n        if (this.props.tvGenres.genres) {\n            let genresArr = this.props.tvGenres.genres.filter(genre => genre.id === genreIds[0] || genre.id === genreIds[1] || genre.id === genreIds[2] ? genre.name : null);\n        \n            if(genresArr[2]){\n                return <p>{genresArr[0] ? genresArr[0].name : ''} | {genresArr[1] ? genresArr[1].name : ''} | {genresArr[2] ? genresArr[2].name : ''}</p>\n            } else if(genresArr[1] && ! genresArr[2]) {\n                return <p>{genresArr[0] ? genresArr[0].name : ''} | {genresArr[1] ? genresArr[1].name : ''}</p>\n            } else if(genresArr[0] && !genresArr[1] && !genresArr[2]) {\n                return <p>{genresArr[0] ? genresArr[0].name : ''}</p>\n            }\n          \n      }\n    }\n\n    render() {\n        return (\n                <React.Fragment>\n                    <div className=\"popular__movies-list--container\">\n                    {this.props.items.map(show => {\n                        return (\n                    <Media key={show.id}>\n                        <Media left top href=\"#\">\n                        <Link style={{ textDecoration: 'none' }} to={`/details/${this.props.type.toLowerCase()}/${show.id}`}>\n                            <Media object src={`${this.props.MDBConfig.images.secure_base_url}w154${show.poster_path}`} alt={show.name}/>\n                        </Link>\n                        </Media>\n                        <Media body>\n                            <Media heading>\n                                <Link style={{ textDecoration: 'none', color: 'darkblue', display: \"inline-block\" }} to={`/details/${this.props.type.toLowerCase()}/${show.id}`}>\n                                    {show.name}\n                                </Link>\n                            </Media>\n                            {this.handleGetGenre(show.genre_ids)}{show.vote_average} Rating\n                            {show.overview}\n                        </Media>\n                    </Media>\n                        );\n                    })}\n                    </div>\n                </React.Fragment>);\n    }\n// render() {\n\n\n//     return (\n//         this.props.items.map(show => {\n//           return (\n//           <React.Fragment>\n//               <div key={show.id} className=\"popular__shows-list--container\">\n//               <Media>\n//                   <Media left top href=\"#\">\n//                   <Media object src={`${this.props.MDBConfig.images.secure_base_url}w92${show.poster_path}`} alt={show.name}/>\n//                   </Media>\n//                   <Media body>\n//                   <Media heading>\n//                       {show.name}\n//                   </Media>\n//                     {this.handleGetGenre(show.genre_ids)}{show.vote_average} Rating\n//                     {show.overview}\n//                   </Media>\n//               </Media>\n//               </div>\n//               <hr className=\"popular__shows-list--separator\"/>\n//           </React.Fragment>);\n          \n//       })\n//     );\n// }\n};\n\nexport default PopularTVShows;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ItemCarousel.scss';\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n} from 'reactstrap';\n\nconst Test = ({ items, MDBConfig, itemType }) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = itemType === 'MOVIE' ? (items.map((movie) => {\n    return (\n      <CarouselItem\n        className=\"carousel__item\"\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={movie.id}\n      ><div className=\"carousel__item--image\">\n        <img style={{height: \"90vh\", width: \"100%\"}}src={`${MDBConfig.images.secure_base_url}original${movie.backdrop_path}`} alt={movie.title} />\n      </div>\n        <CarouselCaption captionText={movie.release_date} captionHeader={movie.title} />\n      </CarouselItem>\n    );\n  })) : (items.map((tv) => {\n    return (\n      <CarouselItem\n        className=\"carousel__item\"\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={tv.id}\n      ><div className=\"carousel__item--image\">\n        <img style={{height: \"90vh\", width: \"100%\"}}src={`${MDBConfig.images.secure_base_url}original${tv.backdrop_path}`} alt={tv.name} />\n      </div>\n        <CarouselCaption captionText={tv.first_air_date} captionHeader={tv.name} />\n      </CarouselItem>\n    );\n  }))\n\n  return (\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n    >\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n    </Carousel>\n  );\n}\n\nexport default Test;","import './Home.scss';\nimport React from 'react';\nimport Header from '../Header/Header';\nimport ToggleButtons from '../ToggleButtons/ToggleButtons';\nimport Footer from '../Footer/Footer';\nimport Loader from '../Loader/Loader';\nimport PopularMovies from '../PopularMovies/PopularMovies';\nimport PopularTVShows from '../PopularTVShows/PopularTVShows';\nimport ItemCarousel from '../ItemCarousel/ItemCarousel';\nimport { connect } from 'react-redux';\nimport { postMoviePopular } from '../../actions/postMoviePopularAction';\nimport { postTVPopular } from '../../actions/postTVPopularAction';\nimport setItemType from '../../actions/setItemTypeAction.js';\n\n\nclass Home extends React.Component {\n\n    componentDidMount() {\n        this.props.postMoviePopular(`https://api.themoviedb.org/3/movie/popular?api_key=${this.props.apiKey}&language=en-US&page=1&region=US`); \n        this.props.postTVPopular(`https://api.themoviedb.org/3/tv/popular?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.setItemType();\n    }\n\n    render() {\n\n        const renderShowType = this.props.itemType === 'MOVIE' ? <PopularMovies type={this.props.itemType} movieGenres={this.props.movieGenres} title=\"Popular Movies\" MDBConfig={this.props.config} items={this.props.moviesPopular.results} /> : <PopularTVShows type={this.props.itemType} tvGenres={this.props.tvGenres} title=\"Popular TV Shows\" MDBConfig={this.props.config} items={this.props.tvPopular.results}/> \n\n        const renderCarouselType = this.props.itemType === 'MOVIE' ? <ItemCarousel MDBConfig={this.props.config} items={this.props.moviesPopular.results} itemType={this.props.itemType}/> : <ItemCarousel MDBConfig={this.props.config} itemType={this.props.itemType} items={this.props.tvPopular.results} />;\n\n        return (\n        <div style={{marginTop: \"85px\"}}>\n            <Header />\n            <div>\n                {renderCarouselType}\n            </div>\n            <ToggleButtons />\n            <div>\n                {renderShowType}\n            </div>\n            <Loader />\n            <Footer />\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        config: state.PostMDBConfig,\n        apiKey: state.PostMDBConfig.apiKey,\n        moviesPopular: state.postMoviePopular,\n        tvPopular: state.postTVPopular,\n        itemType: state.setItemType.itemType,\n        movieGenres: state.getMovieGenre,\n        tvGenres: state.getTVGenre\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        postMoviePopular: url => dispatch(postMoviePopular(url)),\n        postTVPopular: url => dispatch(postTVPopular(url)),\n        setItemType: type => dispatch(setItemType(type))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import { GET_MOVIE_DETAILS } from './types';\n\nexport const getMovieDetails = url => dispatch => {\n    fetch(url)\n    .then(res => res.json())\n    .then(data => dispatch(saveMovieDetails(data)))\n    .catch(error => {\n        console.log(error);\n    })\n}\n\nconst saveMovieDetails = payload => {\n    return {\n        type: GET_MOVIE_DETAILS,\n        payload\n    }\n}","import { GET_MOVIE_CREDITS } from './types';\n\nexport const getMovieCredits = url => dispatch => {\n    fetch(url)\n    .then(res => res.json())\n    .then(data => dispatch(saveMovieCredits(data)))\n    .catch(error => {\n        console.log(error);\n    })\n}\n\nconst saveMovieCredits = payload => {\n    return {\n        type: GET_MOVIE_CREDITS,\n        payload\n    }\n}","import { GET_MOVIE_REVIEWS } from './types';\n\nexport const getMovieReviews = url => dispatch => {\n    fetch(url)\n    .then(res => res.json())\n    .then(data => dispatch(saveMovieReviews(data)))\n    .catch(error => {\n        console.log(error);\n    })\n}\n\nconst saveMovieReviews = payload => {\n    return {\n        type: GET_MOVIE_REVIEWS,\n        payload\n    }\n}","import { GET_MOVIE_VIDEOS } from './types';\n\nexport const getMovieVideos = url => dispatch => {\n    fetch(url)\n    .then(res => res.json())\n    .then(data => dispatch(saveMovieVideos(data)))\n    .catch(error => {\n        console.log(error);\n    })\n}\n\nconst saveMovieVideos = payload => {\n    return {\n        type: GET_MOVIE_VIDEOS,\n        payload\n    }\n}","import React from 'react';\nimport Loader from '../Loader/Loader';\nimport { getMovieDetails } from '../../actions/getMovieDetailsAction';\nimport { getMovieCredits } from '../../actions/getMovieCreditsAction';\nimport { getMovieReviews } from '../../actions/getMovieReviewsAction';\nimport { getMovieVideos } from '../../actions/getMovieVideosAction';\nimport { connect } from 'react-redux';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport './ItemDetails.scss';\nimport { Card, Icon, Image } from 'semantic-ui-react';\n\n\n\nclass ItemDetails extends React.Component {\n\n    componentDidMount() {\n        this.fetchData(this.props.match.params.id);\n    }\n\n\n    fetchData(id, type = this.props.match.params.type) {\n        switch(type){\n            case 'movie':\n                this.props.getMovieDetails(`https://api.themoviedb.org/3/movie/${id}?api_key=${this.props.apiKey}&language=en-US`)\n                this.props.getMovieCredits(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${this.props.apiKey}`)\n                this.props.getMovieReviews(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${this.props.apiKey}&language=en-US&page=1`)\n                this.props.getMovieVideos(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${this.props.apiKey}&language=en-US`)\n                break;\n            case 'tv':\n                break;\n            case 'people':\n                break;\n            default:\n                break;\n        }\n\n    }\n\n    render() {\n    \n        return(\n            <div>\n                <Header />\n                    <Card>\n                        <Image src={`${this.props.config.images.secure_base_url}w500${this.props.movieDetails.poster_path}`} wrapped ui={false} />\n                        <Card.Content>\n                        <Card.Header>{this.props.movieDetails.title}</Card.Header>\n                        <Card.Meta>\n                            <span className='date'>{this.props.movieDetails.release_date}</span>\n                        </Card.Meta>\n                        <Card.Description>\n                            {this.props.movieDetails.tagline}\n                        </Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n                        </Card.Content>\n                    </Card>\n                <Footer />\n                <Loader />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        config: state.PostMDBConfig,\n        apiKey: state.PostMDBConfig.apiKey,\n        moviesPopular: state.postMoviePopular,\n        tvPopular: state.postTVPopular,\n        itemType: state.setItemType.itemType,\n        movieGenres: state.getMovieGenre,\n        tvGenres: state.getTVGenre,\n        movieDetails: state.getMovieDetails,\n        movieCredits: state.getMovieCredits,\n        movieReviews: state.getMovieReviews,\n        movieVideos: state.getMovieVideos\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getMovieDetails: url => dispatch(getMovieDetails(url)),\n        getMovieCredits: url => dispatch(getMovieCredits(url)),\n        getMovieReviews: url => dispatch(getMovieReviews(url)),\n        getMovieVideos: url => dispatch(getMovieVideos(url))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemDetails);","import { GET_MOVIE_GENRE } from './types';\n\nexport const getMovieGenre = url => dispatch => {\n    fetch(url)\n    .then(res => res.json())\n    .then(data => dispatch(saveMovieGenre(data)))\n    .catch(error => {\n        console.log(error);\n    })\n}\n\nconst saveMovieGenre = payload => {\n    return {\n        type: GET_MOVIE_GENRE,\n        payload\n    }\n}","import { GET_TV_GENRE } from './types';\n\nexport const getTVGenre = url => dispatch => {\n    fetch(url)\n    .then(res => res.json())\n    .then(data => dispatch(saveTVGenre(data)))\n    .catch(error => {\n        console.log(error);\n    })\n}\n\nconst saveTVGenre = payload => {\n    return {\n        type: GET_TV_GENRE,\n        payload\n    }\n}","import React from 'react';\nimport Home from '../Home/Home';\nimport ItemDetails from '../ItemDetails/ItemDetails';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getMovieGenre } from '../../actions/getMovieGenreAction';\nimport { getTVGenre } from '../../actions/getTVGenreAction';\nimport { postMDBConfig } from '../../actions/PostMDBConfigAction';\nimport setItemType from '../../actions/setItemTypeAction.js';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas, faFilm, faSearch } from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\n\nlibrary.add(fas, faFilm, faSearch);\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.postMDBConfig(`https://api.themoviedb.org/3/configuration?api_key=${this.props.apiKey}`);\n        this.props.getMovieGenre(`https://api.themoviedb.org/3/genre/movie/list?api_key=${this.props.apiKey}&language=en-US\n        `);\n        this.props.getTVGenre(`https://api.themoviedb.org/3/genre/tv/list?api_key=${this.props.apiKey}&language=en-US\n        `);       \n        this.props.setItemType();\n    }\n\n    render() {\n\n        return ( \n        <BrowserRouter>\n            <div className=\"main\">\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/details/:type/:id\" exact component={ItemDetails} />\n                <Route path=\"/search-results/:id\" exact component=\"{SearchResults} \"/>\n                <Route path=\"/discover\" exact component=\"{Discover}\" />\n\n                <Switch>\n\n                    {/* Hanlde routing for authentication */}\n                    <Route path=\"/log-in\" exact component=\"{UserLogIn}\" />\n                    <Route path=\"/profile/:status\" exact component=\"{UserProfile}\" />\n\n                    {!this.props.logInStatus || this.props.session.failure  ? <Redirect from='/profile' to=\"/log-in\" /> : <Redirect from='/profile' to='/profile/approved' /> }\n                    {!this.props.logInStatus || this.props.session.failure  ? <Redirect from='/profile/approved' to=\"/log-in\" /> : <Redirect from='/log-in' to='/profile/approved' /> }\n                    {!this.props.logInStatus === 'GUEST'  ? <Redirect from='/log-in' to='/profile/guest' /> : <Redirect from='/profile/guest' to=\"/log-in\" /> }\n\n                </Switch>\n\n            </div>\n        </BrowserRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        config: state.PostMDBConfig,\n        apiKey: state.PostMDBConfig.apiKey\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        postMDBConfig: url => dispatch(postMDBConfig(url)),\n        setItemType: type => dispatch(setItemType(type)),\n        getMovieGenre: url => dispatch(getMovieGenre(url)),\n        getTVGenre: url => dispatch(getTVGenre(url))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor} from './store';\nimport './index.css';\nimport App from './components/App/App';\nimport Loader from './components/Loader/Loader';\nimport * as serviceWorker from './serviceWorker';\nimport { PersistGate } from 'redux-persist/integration/react'\n\n\n\n\nReactDOM.render(\n    <PersistGate loading={Loader} persistor={persistor}>\n        <Provider store={store}>\n            <App />\n        </Provider> \n    </PersistGate>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}